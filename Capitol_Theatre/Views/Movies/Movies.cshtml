@model IEnumerable<Capitol_Theatre.Data.Movie>
@inject Capitol_Theatre.Services.ISiteSettingsService SiteSettingsService
@{
    var siteSettings = SiteSettingsService.GetSettings();
}
@{
    var mode = ViewData["Mode"]?.ToString() ?? "nowshowing";
    var title = ViewData["Title"]?.ToString() ?? "Movies";

    var today = DateTime.Today;
    var start = today.AddDays(-((int)today.DayOfWeek + 2) % 7);
    var end = start.AddDays(6);
    var nextFriday = today.AddDays(14 - ((int)today.DayOfWeek + 2) % 7);
}

<div class="container py-4">
    <h2 class="mb-1">@title</h2>

    @if (mode.Equals("nowshowing", StringComparison.OrdinalIgnoreCase) || mode.Equals("nextweek", StringComparison.OrdinalIgnoreCase))
    {
        <h5 class="text-muted mb-4">Fri @start.ToString("MMMM d") to Thurs @end.ToString("MMMM d")</h5>
    }
    else if (mode.Equals("comingsoon", StringComparison.OrdinalIgnoreCase))
    {
        <h5 class="text-muted mb-4">After @nextFriday.ToString("MMMM d")</h5>
    }

    <div class="d-flex flex-wrap gap-4 justify-content-center justify-content-md-start">
        @foreach (var movie in Model)
        {
            <div class="card shadow-sm" style="width: 24rem; background-color: @siteSettings.CardBackgroundColor;">

                <div class="poster-container" data-trailer="@movie.TrailerUrl" onclick="handlePosterClick(this)">
                    <img src="@movie.PosterPath" class="card-img-top img-fluid" alt="@movie.Title Poster">
                    @if (!string.IsNullOrWhiteSpace(movie.Description))
                    {
                        <div class="poster-overlay">
                            @movie.Description
                            @if (!string.IsNullOrWhiteSpace(movie.TrailerUrl))
                            {
                                <text>&#10;&#10;Click to watch the trailer!</text>
                            }
                        </div>
                    }
                </div>

                <div class="card-body background-color: @siteSettings.CardBackgroundColor;">
                    <h5 class="card-title">@movie.Title</h5>

                    @if (movie.Showtimes != null && movie.Showtimes.Any())
                    {
                        <p class="card-text mb-1 fs-6">
                            @Html.Raw(movie.GetFormattedShowtimes().Replace("\n", "<br/>"))
                        </p>
                    }

                    @if (movie.EndShowingDate.HasValue)
                    {
                        <p class="card-text mb-1">
                            <strong>Last Showing:</strong> @movie.EndShowingDate.Value.ToString("dddd MMMM d")
                        </p>
                    }

                    <p class="card-text">
                        <strong>Rating:</strong> @movie.Rating?.Code
                        @if (!string.IsNullOrWhiteSpace(movie.Warning))
                        {
                            <span style="color:@movie.WarningColor"> - @movie.Warning</span>
                        }
                    </p>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function handlePosterClick(container) {
            const isMobile = window.innerWidth < 768;
            const overlay = container.querySelector('.poster-overlay');

            if (!isMobile) {
                const trailerUrl = container.dataset.trailer;
                if (trailerUrl) {
                    window.open(trailerUrl, '_blank');
                }
                return;
            }

            if (!overlay.classList.contains('active')) {
                document.querySelectorAll('.poster-overlay').forEach(o => o.classList.remove('active'));
                overlay.classList.add('active');
            } else {
                const trailerUrl = container.dataset.trailer;
                if (trailerUrl) {
                    window.open(trailerUrl, '_blank');
                }
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.poster-container').forEach(container => {
                container.addEventListener('mouseleave', function () {
                    const overlay = container.querySelector('.poster-overlay');
                    if (overlay) overlay.classList.remove('active');
                });
                container.addEventListener('touchend', function () {
                    const overlay = container.querySelector('.poster-overlay');
                    if (overlay) overlay.classList.remove('active');
                });
                container.addEventListener('touchcancel', function () {
                    const overlay = container.querySelector('.poster-overlay');
                    if (overlay) overlay.classList.remove('active');
                });
            });
        });
    </script>
}

}
